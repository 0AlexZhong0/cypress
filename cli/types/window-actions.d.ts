// This file was generated by `npm run generate-window-types` (scripts/window-types/generate-window-types.js)
// Run `npm run generate-window-types` again to re-generate them

interface WindowActions {
  (action: 'window:animationend', fn: (event: Event) => void): void
  (action: 'window:animationiteration', fn: (event: Event) => void): void
  (action: 'window:animationstart', fn: (event: Event) => void): void
  (action: 'window:search', fn: (event: Event) => void): void
  (action: 'window:transitionend', fn: (event: Event) => void): void
  (action: 'window:abort', fn: (event: Event) => void): void
  (action: 'window:blur', fn: (event: Event) => void): void
  (action: 'window:cancel', fn: (event: Event) => void): void
  (action: 'window:canplay', fn: (event: Event) => void): void
  (action: 'window:canplaythrough', fn: (event: Event) => void): void
  (action: 'window:change', fn: (event: Event) => void): void
  (action: 'window:click', fn: (event: Event) => void): void
  (action: 'window:close', fn: (event: Event) => void): void
  (action: 'window:contextmenu', fn: (event: Event) => void): void
  (action: 'window:cuechange', fn: (event: Event) => void): void
  (action: 'window:dblclick', fn: (event: Event) => void): void
  (action: 'window:drag', fn: (event: Event) => void): void
  (action: 'window:dragend', fn: (event: Event) => void): void
  (action: 'window:dragenter', fn: (event: Event) => void): void
  (action: 'window:dragleave', fn: (event: Event) => void): void
  (action: 'window:dragover', fn: (event: Event) => void): void
  (action: 'window:dragstart', fn: (event: Event) => void): void
  (action: 'window:drop', fn: (event: Event) => void): void
  (action: 'window:durationchange', fn: (event: Event) => void): void
  (action: 'window:emptied', fn: (event: Event) => void): void
  (action: 'window:ended', fn: (event: Event) => void): void
  (action: 'window:error', fn: (event: Event) => void): void
  (action: 'window:focus', fn: (event: Event) => void): void
  (action: 'window:input', fn: (event: Event) => void): void
  (action: 'window:invalid', fn: (event: Event) => void): void
  (action: 'window:keydown', fn: (event: Event) => void): void
  (action: 'window:keypress', fn: (event: Event) => void): void
  (action: 'window:keyup', fn: (event: Event) => void): void
  (action: 'window:load', fn: (event: Event) => void): void
  (action: 'window:loadeddata', fn: (event: Event) => void): void
  (action: 'window:loadedmetadata', fn: (event: Event) => void): void
  (action: 'window:loadstart', fn: (event: Event) => void): void
  (action: 'window:mousedown', fn: (event: Event) => void): void
  (action: 'window:mouseenter', fn: (event: Event) => void): void
  (action: 'window:mouseleave', fn: (event: Event) => void): void
  (action: 'window:mousemove', fn: (event: Event) => void): void
  (action: 'window:mouseout', fn: (event: Event) => void): void
  (action: 'window:mouseover', fn: (event: Event) => void): void
  (action: 'window:mouseup', fn: (event: Event) => void): void
  (action: 'window:mousewheel', fn: (event: Event) => void): void
  (action: 'window:pause', fn: (event: Event) => void): void
  (action: 'window:play', fn: (event: Event) => void): void
  (action: 'window:playing', fn: (event: Event) => void): void
  (action: 'window:progress', fn: (event: Event) => void): void
  (action: 'window:ratechange', fn: (event: Event) => void): void
  (action: 'window:reset', fn: (event: Event) => void): void
  (action: 'window:resize', fn: (event: Event) => void): void
  (action: 'window:scroll', fn: (event: Event) => void): void
  (action: 'window:seeked', fn: (event: Event) => void): void
  (action: 'window:seeking', fn: (event: Event) => void): void
  (action: 'window:select', fn: (event: Event) => void): void
  (action: 'window:stalled', fn: (event: Event) => void): void
  (action: 'window:submit', fn: (event: Event) => void): void
  (action: 'window:suspend', fn: (event: Event) => void): void
  (action: 'window:timeupdate', fn: (event: Event) => void): void
  (action: 'window:toggle', fn: (event: Event) => void): void
  (action: 'window:volumechange', fn: (event: Event) => void): void
  (action: 'window:waiting', fn: (event: Event) => void): void
  (action: 'window:wheel', fn: (event: Event) => void): void
  (action: 'window:auxclick', fn: (event: Event) => void): void
  (action: 'window:gotpointercapture', fn: (event: Event) => void): void
  (action: 'window:lostpointercapture', fn: (event: Event) => void): void
  (action: 'window:pointerdown', fn: (event: Event) => void): void
  (action: 'window:pointermove', fn: (event: Event) => void): void
  (action: 'window:pointerup', fn: (event: Event) => void): void
  (action: 'window:pointercancel', fn: (event: Event) => void): void
  (action: 'window:pointerover', fn: (event: Event) => void): void
  (action: 'window:pointerout', fn: (event: Event) => void): void
  (action: 'window:pointerenter', fn: (event: Event) => void): void
  (action: 'window:pointerleave', fn: (event: Event) => void): void
  (action: 'window:afterprint', fn: (event: Event) => void): void
  (action: 'window:beforeprint', fn: (event: Event) => void): void
  (action: 'window:beforeunload', fn: (event: Event) => void): void
  (action: 'window:hashchange', fn: (event: Event) => void): void
  (action: 'window:languagechange', fn: (event: Event) => void): void
  (action: 'window:message', fn: (event: Event) => void): void
  (action: 'window:messageerror', fn: (event: Event) => void): void
  (action: 'window:offline', fn: (event: Event) => void): void
  (action: 'window:online', fn: (event: Event) => void): void
  (action: 'window:pagehide', fn: (event: Event) => void): void
  (action: 'window:pageshow', fn: (event: Event) => void): void
  (action: 'window:popstate', fn: (event: Event) => void): void
  (action: 'window:rejectionhandled', fn: (event: Event) => void): void
  (action: 'window:storage', fn: (event: Event) => void): void
  (action: 'window:unhandledrejection', fn: (event: Event) => void): void
  (action: 'window:unload', fn: (event: Event) => void): void
  (action: 'window:appinstalled', fn: (event: Event) => void): void
  (action: 'window:beforeinstallprompt', fn: (event: Event) => void): void
  (action: 'window:devicemotion', fn: (event: Event) => void): void
  (action: 'window:deviceorientation', fn: (event: Event) => void): void
  (action: 'window:deviceorientationabsolute', fn: (event: Event) => void): void
}
