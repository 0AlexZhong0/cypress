diff --git a/node_modules/snap-shot-it/src/index.js b/node_modules/snap-shot-it/src/index.js
index f015954..24f0777 100644
--- a/node_modules/snap-shot-it/src/index.js
+++ b/node_modules/snap-shot-it/src/index.js
@@ -76,7 +76,7 @@ const throwDuplicateSnapshotKeyError = (current, previous) => {
   la(isPruneInfo(current), 'wrong current snapshot info', current)
   la(isPruneInfo(previous), 'wrong previous snapshot info', previous)
 
-  throw new Error(stripIndent`
+  const err = Error(stripIndent`
     Duplicate snapshot key "${current.key}"
     in spec file: ${relativeToCwd(current.specFile)}
     current test title: "${current.testTitle}"
@@ -84,6 +84,9 @@ const throwDuplicateSnapshotKeyError = (current, previous) => {
     previous test title in parts: ${previous.titleParts.join(' - ')}
     Please change the snapshot name to ensure uniqueness.
   `)
+  
+  err.duplicateSnapshotKey = true
+  throw err
 }
 
 // eslint-disable-next-line immutable/no-let
@@ -279,50 +282,18 @@ function snapshot (value) {
     // just missing "key" which is determined in the snap-shot-core
   }
 
-  let coreResult
-  try {
-    debug('about to compare')
-    coreResult = core(snap)
-    debug('core result %o', coreResult)
-
-    // there should be value and snapshot name (key)
-    la('value' in coreResult, 'core result should have value', coreResult)
-    la('key' in coreResult, 'core result should have key', coreResult)
-
-    const pruneInfo = R.assoc('key', coreResult.key, snapshotInfo)
-    debug('prune info %o', pruneInfo)
-
-    addToPrune(pruneInfo)
-  } catch (e) {
-    if (e.key) {
-      debug('value comparison exception')
-      // maybe it is due to a duplicate snapshot key?
-      // maybe two different tests save snapshots with same name like
-      //
-      // it('a', () => {
-      //   snapshot('foo', 1)
-      // })
-      // it('b', () => {
-      //   snapshot('foo', 42)
-      // })
-      //
-      // check if we have a collision
-      const info = R.assoc('key', e.key, snapshotInfo)
-      debug('current snapshot info %o', info)
-
-      const prevInfo = findExistingSnapshotKey(info)
-      if (prevInfo) {
-        debug('found duplicate snapshot name: %s', prevInfo.key)
-        console.error(
-          'Snapshot error was caused by the duplicate snapshot name'
-        )
-        throwDuplicateSnapshotKeyError(info, prevInfo)
-      }
-    }
+  debug('about to compare %o', snap)
+  const coreResult = core(snap)
+  debug('core result %o', coreResult)
 
-    debug('not a snapshot key collision')
-    throw e
-  }
+  // there should be value and snapshot name (key)
+  la('value' in coreResult, 'core result should have value', coreResult)
+  la('key' in coreResult, 'core result should have key', coreResult)
+
+  const pruneInfo = R.assoc('key', coreResult.key, snapshotInfo)
+  debug('prune info %o', pruneInfo)
+
+  addToPrune(pruneInfo)
 
   return coreResult
 }
